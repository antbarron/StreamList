{"ast":null,"code":"var _jsxFileName = \"/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StreamList = () => {\n  _s();\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  const navigate = useNavigate(); // Initialize navigate\n  const [isDialogOpen, setIsDialogOpen] = useState(false); // <-- This is important to manage dialog visibility\n\n  const handleInputChange = event => {\n    setInput(event.target.value); // Update input state\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false); // Close the dialog when \"X\" is clicked\n  };\n  const handleClick = () => {\n    setIsDialogOpen(true); // Open dialog when button is clicked\n  };\n  const handleGoToCart = () => {\n    navigate('/cart'); // Navigate to the Cart page\n  };\n  const handleGoToMovie = () => {\n    navigate('/Movies'); // Navigate to the Movie page\n  };\n  const handleSave = () => {\n    alert('List saved!'); // Placeholder alert for the Save functionality\n    // Add your own save functionality here (e.g., storing in local storage, sending to a server, etc.)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"inline-heading\",\n        children: \"Stream List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Enter Movie\",\n        className: \"input-box\" // Add class for styling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"save-button\",\n        onClick: handleGoToMovie,\n        children: \"Save List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"input-list\",\n      children: inputList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: handleClick,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: handleClick,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: handleCloseDialog,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"go-button\",\n        onClick: handleGoToCart,\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" or \"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"go-button\",\n        onClick: handleGoToCart,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamList, \"lr9wuj55V100uLXMIXjBJGAPyqw=\", false, function () {\n  return [useNavigate];\n});\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StreamList","_s","input","setInput","inputList","setInputList","navigate","isDialogOpen","setIsDialogOpen","handleInputChange","event","target","value","handleSubmit","preventDefault","handleCloseDialog","handleClick","handleGoToCart","handleGoToMovie","handleSave","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\n\nconst StreamList = () => {\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  const navigate = useNavigate(); // Initialize navigate\n  const [isDialogOpen, setIsDialogOpen] = useState(false); // <-- This is important to manage dialog visibility\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value); // Update input state\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false); // Close the dialog when \"X\" is clicked\n  };\n  const handleClick = () => {\n    setIsDialogOpen(true); // Open dialog when button is clicked\n  };\n\n  const handleGoToCart = () => {\n    navigate('/cart'); // Navigate to the Cart page\n  };\n  const handleGoToMovie = () => {\n    navigate('/Movies'); // Navigate to the Movie page\n  };\n  const handleSave = () => {\n    alert('List saved!'); // Placeholder alert for the Save functionality\n    // Add your own save functionality here (e.g., storing in local storage, sending to a server, etc.)\n  };\n  return (\n    <div>\n\n    <div className=\"header-container\">\n      <span className=\"material-symbols-outlined\">theaters</span>\n      <h1 className=\"inline-heading\">Stream List</h1>\n      <span className=\"material-symbols-outlined\">theaters</span>\n      </div>\n\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter Movie\" \n        className=\"input-box\" // Add class for styling\n        />\n        <button type=\"submit\" className=\"submit-button\">Add Movie</button>\n        <button type=\"button\" className=\"save-button\" onClick={handleGoToMovie}>Save List</button> {/* Save button */}\n        </form>\n      \n\n      \n        <ul className=\"input-list\">\n  {inputList.map((item, index) => (\n    <li key={index} className=\"list-item\">\n      <span>{item}</span> {/* User input */}\n      <button className=\"play-button\" onClick={handleClick}>Play</button> {/* Play button */}\n      <button className=\"play-button\" onClick={handleClick}>Play</button> {/* Play button */}\n    </li>\n  ))}\n</ul>\n\n\n      {/* Dialog for subscription */}\n      {isDialogOpen && (\n        <div className=\"dialog\">\n          <button className=\"close-button\" onClick={handleCloseDialog}>X</button> {/* X button to close dialog */}\n          {/*<h2 className=\"dialog-title\"> Customer Plans</h2>*/}\n          <button className=\"go-button\" onClick={handleGoToCart}>Subscribe</button> \n          <> or </>\n          <button className=\"go-button\" onClick={handleGoToCart}>Login</button> \n\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB,CAAC,CAAC;AAC3B,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD,MAAMe,iBAAiB,GAAIC,KAAK,IAAK;IACnCP,QAAQ,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC,CAAC,CAAC;IACxBT,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;IACrCC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EACD,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9BP,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;EACD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBR,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;EACD,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EACD,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;EACD,oBACEvB,OAAA;IAAAwB,QAAA,gBAEAxB,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BxB,OAAA;QAAMyB,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3D7B,OAAA;QAAIyB,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C7B,OAAA;QAAMyB,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eAEN7B,OAAA;MAAMyB,SAAS,EAAC,YAAY;MAACK,QAAQ,EAAEd,YAAa;MAAAQ,QAAA,gBAClDxB,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXhB,KAAK,EAAEV,KAAM;QACb2B,QAAQ,EAAEpB,iBAAkB;QAC5BqB,WAAW,EAAC,aAAa;QAC3BR,SAAS,EAAC,WAAW,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACF7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClE7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,aAAa;QAACS,OAAO,EAAEb,eAAgB;QAAAG,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eAIP7B,OAAA;MAAIyB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAC/BjB,SAAS,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBrC,OAAA;QAAgByB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACnCxB,OAAA;UAAAwB,QAAA,EAAOY;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,KAAC,eACpB7B,OAAA;UAAQyB,SAAS,EAAC,aAAa;UAACS,OAAO,EAAEf,WAAY;UAAAK,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,eACpE7B,OAAA;UAAQyB,SAAS,EAAC,aAAa;UAACS,OAAO,EAAEf,WAAY;UAAAK,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA,GAH7DQ,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAIEnB,YAAY,iBACXV,OAAA;MAAKyB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBxB,OAAA;QAAQyB,SAAS,EAAC,cAAc;QAACS,OAAO,EAAEhB,iBAAkB;QAAAM,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,eAExE7B,OAAA;QAAQyB,SAAS,EAAC,WAAW;QAACS,OAAO,EAAEd,cAAe;QAAAI,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzE7B,OAAA,CAAAE,SAAA;QAAAsB,QAAA,EAAE;MAAI,gBAAE,CAAC,eACTxB,OAAA;QAAQyB,SAAS,EAAC,WAAW;QAACS,OAAO,EAAEd,cAAe;QAAAI,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/EID,UAAU;EAAA,QAGGL,WAAW;AAAA;AAAAwC,EAAA,GAHxBnC,UAAU;AAiFhB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}