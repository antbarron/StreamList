{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{v4 as uuidv4}from'uuid';// Import uuid for unique IDs\nimport'./StreamList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StreamList=()=>{const[input,setInput]=useState('');const[inputList,setInputList]=useState([]);const[editText,setEditText]=useState('');// To store the current text when editing\nconst[editId,setEditId]=useState(null);// To track which item is being edited\nconst[message,setMessage]=useState('');// To store feedback messages\nconst navigate=useNavigate();const YOUTUBE_API_KEY=process.env.REACT_APP_YOUTUBE_API_KEY;const handleInputChange=event=>{setInput(event.target.value);};const handleSubmit=event=>{event.preventDefault();//avoid page reload\nif(input.trim()){// Update the inputList state by adding a new movie object with a unique ID and the entered text\nsetInputList([...inputList,{id:uuidv4(),text:input}]);setInput('');setMessage('Movie added successfully!');setTimeout(()=>setMessage(''),1000);// Remove the message after 1 second\n}};const handleRemove=id=>{setInputList(inputList.filter(item=>item.id!==id));setMessage('Movie removed successfully!');setTimeout(()=>setMessage(''),1000);};const handleEdit=id=>{// Locate the item in the inputList that matches the provided ID.\nconst itemToEdit=inputList.find(item=>item.id===id);// Set editText state with curent name in the input field and allows changes\nsetEditText(itemToEdit.text);setEditId(id);// Update editId state to track which movie is currently being edited.\n};const handleEditSubmit=event=>{event.preventDefault();//loops over items in inputList. For every element, the function inside the map() is called.\nif(editText.trim()&&editId){setInputList(inputList.map(item=>//checks if current item's id matches, creates a copy of item object and updates with editText.\nitem.id===editId?{...item,text:editText}:item//Otherwise unchanged\n));setEditText('');setEditId(null);setMessage('Movie edited successfully!');setTimeout(()=>setMessage(''),1000);}};const handleEditCancel=()=>{setEditText('');// Clear the editText state\nsetEditId(null);// Set editId to null to indicate that no movie is currently in the editing state.\n};const handleSearchMovie=async movieTitle=>{// Fetch search results from YouTube API\nconst response=await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(movieTitle)}&key=${YOUTUBE_API_KEY}`);// Parse the JSON data from the response\nconst data=await response.json();// Navigate to the movie detail page, passing the search results as state\nnavigate(`/movie/${movieTitle}`,{state:{searchResults:data.items}});};const handleGoToCart=()=>{navigate('/cart');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"theaters\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"inline-heading\",children:\"Stream List\"}),/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"theaters\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"feedback-message\",children:message}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"input-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleInputChange,placeholder:\"Enter Movie\",className:\"input-box\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Add Movie\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"save-button\",onClick:handleGoToCart,children:\"Save List\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"input-list\",children:inputList.map(item=>/*#__PURE__*/// iterates over each item in the inputList array.\n// `item.id` comes from the `id` property of each object in the `inputList` state array,\n//key prop uses it for each <li> element to optimize list rendering and updates.\n_jsxs(\"li\",{className:\"list-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:item.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"play-button\",onClick:()=>handleSearchMovie(item.text),children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"slideshow\"}),\" \"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"remove-button\",onClick:()=>handleRemove(item.id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"remove_selection\"}),\" \"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"edit-button\",onClick:()=>handleEdit(item.id),children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"edit_square\"}),\" \"]})]}),editId&&/*#__PURE__*/_jsxs(\"form\",{className:\"edit-form\",onSubmit:handleEditSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editText//<input> binds to editText state var React manages and update\n,onChange:e=>setEditText(e.target.value)// Updates editText state as the user types\n,placeholder:\"Edit Movie\",className:\"edit-input-box\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"edit-submit-button\",children:\"Submit Edit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-button\",onClick:handleEditCancel,children:\"Cancel\"})]})]},item.id))})]});};export default StreamList;","map":{"version":3,"names":["React","useState","useNavigate","v4","uuidv4","jsx","_jsx","jsxs","_jsxs","StreamList","input","setInput","inputList","setInputList","editText","setEditText","editId","setEditId","message","setMessage","navigate","YOUTUBE_API_KEY","process","env","REACT_APP_YOUTUBE_API_KEY","handleInputChange","event","target","value","handleSubmit","preventDefault","trim","id","text","setTimeout","handleRemove","filter","item","handleEdit","itemToEdit","find","handleEditSubmit","map","handleEditCancel","handleSearchMovie","movieTitle","response","fetch","encodeURIComponent","data","json","state","searchResults","items","handleGoToCart","children","className","onSubmit","type","onChange","placeholder","onClick","e"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid'; // Import uuid for unique IDs\nimport './StreamList.css';\n\nconst StreamList = () => {\n  const [input, setInput] = useState('');\n  const [inputList, setInputList] = useState([]);\n  const [editText, setEditText] = useState(''); // To store the current text when editing\n  const [editId, setEditId] = useState(null); // To track which item is being edited\n  const [message, setMessage] = useState(''); // To store feedback messages\n  const navigate = useNavigate();\n  const YOUTUBE_API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY; \n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();//avoid page reload\n    if (input.trim()) {\n          // Update the inputList state by adding a new movie object with a unique ID and the entered text\n      setInputList([...inputList, { id: uuidv4(), text: input }]);\n      setInput('');\n      setMessage('Movie added successfully!');\n      setTimeout(() => setMessage(''), 1000);// Remove the message after 1 second\n    }\n  };\n\n  const handleRemove = (id) => {\n    setInputList(inputList.filter((item) => item.id !== id));\n    setMessage('Movie removed successfully!');\n    setTimeout(() => setMessage(''), 1000);\n  };\n\n  const handleEdit = (id) => {\n      // Locate the item in the inputList that matches the provided ID.\n    const itemToEdit = inputList.find((item) => item.id === id);\n    // Set editText state with curent name in the input field and allows changes\n    setEditText(itemToEdit.text);  \n    setEditId(id);  // Update editId state to track which movie is currently being edited.\n  };\n\n  const handleEditSubmit = (event) => {\n    event.preventDefault();\n    //loops over items in inputList. For every element, the function inside the map() is called.\n    if (editText.trim() && editId) {\n      setInputList(inputList.map(item => \n       //checks if current item's id matches, creates a copy of item object and updates with editText.\n        item.id === editId ? { ...item, text: editText } : item//Otherwise unchanged\n      ));\n      setEditText('');\n      setEditId(null);\n      setMessage('Movie edited successfully!');\n      setTimeout(() => setMessage(''), 1000);\n    }\n  };\n\n  const handleEditCancel = () => {\n    setEditText('');// Clear the editText state\n    setEditId(null);  // Set editId to null to indicate that no movie is currently in the editing state.\n  };\n\n  const handleSearchMovie = async (movieTitle) => {\n    // Fetch search results from YouTube API\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(movieTitle)}&key=${YOUTUBE_API_KEY}`\n    );\n    // Parse the JSON data from the response\n    const data = await response.json();\n    // Navigate to the movie detail page, passing the search results as state\n    navigate(`/movie/${movieTitle}`, { state: { searchResults: data.items } }); \n  };\n  \n\n  const handleGoToCart = () => {\n    navigate('/cart');\n  };\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <span className=\"material-symbols-outlined\">theaters</span>\n        <h1 className=\"inline-heading\">Stream List</h1>\n        <span className=\"material-symbols-outlined\">theaters</span>\n      </div>\n\n      {message && <p className=\"feedback-message\">{message}</p>} {/* Feedback message */}\n\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter Movie\"\n          className=\"input-box\"\n        />\n        <button type=\"submit\" className=\"submit-button\">Add Movie</button>\n        <button type=\"button\" className=\"save-button\" onClick={handleGoToCart}>Save List</button>\n      </form>\n      <ul className=\"input-list\">\n        {inputList.map((item) => (// iterates over each item in the inputList array.\n         // `item.id` comes from the `id` property of each object in the `inputList` state array,\n        //key prop uses it for each <li> element to optimize list rendering and updates.\n         <li key={item.id} className=\"list-item\">\n      {/* Displays the text of the movie */}\n      <span>{item.text}</span>\n            <div className=\"button-container\">\n              <button className=\"play-button\" onClick={() => handleSearchMovie(item.text)}>\n              <span className=\"material-symbols-outlined\">slideshow</span> </button>\n              <button className=\"remove-button\" onClick={() => handleRemove(item.id)}> \n                 <span className=\"material-symbols-outlined\">remove_selection</span> </button>\n              <button className=\"edit-button\" onClick={() => handleEdit(item.id)}>\n              <span className=\"material-symbols-outlined\">edit_square</span> </button>\n            </div>\n        {/* Edit form (only visible when editing an item) */}\n        {editId && (\n        <form className=\"edit-form\" onSubmit={handleEditSubmit}>\n          <input\n            type=\"text\"\n            value={editText}//<input> binds to editText state var React manages and update\n            onChange={(e) => setEditText(e.target.value)}// Updates editText state as the user types\n            placeholder=\"Edit Movie\"\n            className=\"edit-input-box\"\n          />\n          <button type=\"submit\" className=\"edit-submit-button\">Submit Edit</button>\n          <button type=\"button\" className=\"cancel-button\" onClick={handleEditCancel}>Cancel</button>\n        </form>\n        )}\n        </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}