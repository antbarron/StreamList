{"ast":null,"code":"import React,{useState}from'react';import'./StreamList.css';// Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const[message,setMessage]=useState('');// To store the message to be displayed\nconst StreamList=()=>{const[input,setInput]=useState('');// To store the current input\nconst[inputList,setInputList]=useState([]);// To store the list of submitted inputs\n//const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\nconst handleInputChange=event=>{setInput(event.target.value);// Update input state\n};const handleSubmit=event=>{event.preventDefault();// Prevent page refresh\nsetInputList([...inputList,input]);// Add the current input to the inputList array\nsetInput('');// Clear the input field after submission\n};/*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/const handleClick=item=>{setMessage(`You clicked on: ${item}`);// Set a message when an item is clicked\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"theaters\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"inline-heading\",children:\"Stream List\"}),/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"theaters\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"input-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleInputChange,placeholder:\"Enter something...\",className:\"input-box\"// Add class for styling\n}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"input-list\",children:inputList.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[item,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleClick(item),children:\"Click me\"})]},index))}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]});};export default StreamList;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","message","setMessage","StreamList","input","setInput","inputList","setInputList","handleInputChange","event","target","value","handleSubmit","preventDefault","handleClick","item","children","className","onSubmit","type","onChange","placeholder","map","index","onClick"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\nconst [message, setMessage] = useState(''); // To store the message to be displayed\n\nconst StreamList = () => {\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  //const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value); // Update input state\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  /*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/\n  const handleClick = (item) => {\n    setMessage(`You clicked on: ${item}`); // Set a message when an item is clicked\n  };\n  return (\n    <div>\n\n    <div className=\"header-container\">\n      <span className=\"material-symbols-outlined\">theaters</span>\n      <h1 className=\"inline-heading\">Stream List</h1>\n      <span className=\"material-symbols-outlined\">theaters</span>\n      </div>\n\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter something...\" \n        className=\"input-box\" // Add class for styling\n        />\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\n        </form>\n      \n\n      \n      {/* Display the list of submitted inputs */}\n      <ul className=\"input-list\">\n        {inputList.map((item, index) => (\n          <li key={index}>\n            {item} \n            <button onClick={() => handleClick(item)}>Click me</button>\n          </li>\n        ))}\n      </ul>\n\n      {/* Display the message when an item is clicked */}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,kBAAkB,CAAE;AAC3B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE5C,KAAM,CAAAO,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChD;AAEA,KAAM,CAAAY,iBAAiB,CAAIC,KAAK,EAAK,CACnCJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE;AAChC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIH,KAAK,EAAK,CAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC,CAAE;AACxBN,YAAY,CAAC,CAAC,GAAGD,SAAS,CAAEF,KAAK,CAAC,CAAC,CAAE;AACrCC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CACD;AACF;AACA,MACE,KAAM,CAAAS,WAAW,CAAIC,IAAI,EAAK,CAC5Bb,UAAU,CAAC,mBAAmBa,IAAI,EAAE,CAAC,CAAE;AACzC,CAAC,CACD,mBACEf,KAAA,QAAAgB,QAAA,eAEAhB,KAAA,QAAKiB,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC/BlB,IAAA,SAAMmB,SAAS,CAAC,2BAA2B,CAAAD,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC3DlB,IAAA,OAAImB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,cAC/ClB,IAAA,SAAMmB,SAAS,CAAC,2BAA2B,CAAAD,QAAA,CAAC,UAAQ,CAAM,CAAC,EACtD,CAAC,cAENhB,KAAA,SAAMiB,SAAS,CAAC,YAAY,CAACC,QAAQ,CAAEN,YAAa,CAAAI,QAAA,eAClDlB,IAAA,UACEqB,IAAI,CAAC,MAAM,CACXR,KAAK,CAAEP,KAAM,CACbgB,QAAQ,CAAEZ,iBAAkB,CAC5Ba,WAAW,CAAC,oBAAoB,CAClCJ,SAAS,CAAC,WAAY;AAAA,CACrB,CAAC,cACFnB,IAAA,WAAQqB,IAAI,CAAC,QAAQ,CAACF,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,QAAM,CAAQ,CAAC,EACzD,CAAC,cAKTlB,IAAA,OAAImB,SAAS,CAAC,YAAY,CAAAD,QAAA,CACvBV,SAAS,CAACgB,GAAG,CAAC,CAACP,IAAI,CAAEQ,KAAK,gBACzBvB,KAAA,OAAAgB,QAAA,EACGD,IAAI,cACLjB,IAAA,WAAQ0B,OAAO,CAAEA,CAAA,GAAMV,WAAW,CAACC,IAAI,CAAE,CAAAC,QAAA,CAAC,UAAQ,CAAQ,CAAC,GAFpDO,KAGL,CACL,CAAC,CACA,CAAC,CAGJtB,OAAO,eAAIH,IAAA,MAAAkB,QAAA,CAAIf,OAAO,CAAI,CAAC,EACzB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}