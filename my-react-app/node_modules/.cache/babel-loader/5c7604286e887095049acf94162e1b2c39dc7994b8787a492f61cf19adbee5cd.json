{"ast":null,"code":"var _jsxFileName = \"/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StreamList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamList = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [inputList, setInputList] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const YOUTUBE_API_KEY = 'YOUR_YOUTUBE_API_KEY'; // Replace with your actual API key\n\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim()) {\n      setInputList([...inputList, input]);\n      setInput('');\n    }\n  };\n  const handleSearchMovie = async movieTitle => {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(movieTitle)}&key=${YOUTUBE_API_KEY}`);\n    const data = await response.json();\n    setSearchResults(data.items);\n    navigate(`/movie/${movieTitle}`, {\n      state: {\n        searchResults: data.items\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Enter Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: inputList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearchMovie(item),\n          children: \"Search on YouTube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamList, \"xg4I+JY2G6lyhqhw/PR0IstlNmk=\", false, function () {\n  return [useNavigate];\n});\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StreamList","_s","input","setInput","inputList","setInputList","searchResults","setSearchResults","navigate","YOUTUBE_API_KEY","handleInputChange","event","target","value","handleSubmit","preventDefault","trim","handleSearchMovie","movieTitle","response","fetch","encodeURIComponent","data","json","items","state","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","_c","$RefreshReg$"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StreamList.css';\n\nconst StreamList = () => {\n  const [input, setInput] = useState('');\n  const [inputList, setInputList] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const YOUTUBE_API_KEY = 'YOUR_YOUTUBE_API_KEY'; // Replace with your actual API key\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (input.trim()) {\n      setInputList([...inputList, input]);\n      setInput('');\n    }\n  };\n\n  const handleSearchMovie = async (movieTitle) => {\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(movieTitle)}&key=${YOUTUBE_API_KEY}`\n    );\n    const data = await response.json();\n    setSearchResults(data.items);\n    navigate(`/movie/${movieTitle}`, { state: { searchResults: data.items } });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter Movie\"\n        />\n        <button type=\"submit\">Add Movie</button>\n      </form>\n\n      <ul>\n        {inputList.map((item, index) => (\n          <li key={index}>\n            <span>{item}</span>\n            <button onClick={() => handleSearchMovie(item)}>Search on YouTube</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}