{"ast":null,"code":"var _jsxFileName = \"/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamList = () => {\n  _s();\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  //const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\n\n  const handleInputChange = event => {\n    setInput(event.target.value); // Update input state\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  /*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/\n  const handleClick = item => {\n    setMessage(`You clicked on: ${item}`); // Set a message when an item is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"inline-heading\",\n        children: \"Stream List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Enter something...\",\n        className: \"input-box\" // Add class for styling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"input-list\",\n      children: inputList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(item),\n          children: \"Click me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamList, \"3e2BZmixKlKFD+uMuNWlWWaQm58=\");\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StreamList","_s","input","setInput","inputList","setInputList","handleInputChange","event","target","value","handleSubmit","preventDefault","handleClick","item","setMessage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","map","index","onClick","message","_c","$RefreshReg$"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\n\nconst StreamList = () => {\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  //const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value); // Update input state\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  /*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/\n  const handleClick = (item) => {\n    setMessage(`You clicked on: ${item}`); // Set a message when an item is clicked\n  };\n  return (\n    <div>\n\n    <div className=\"header-container\">\n      <span className=\"material-symbols-outlined\">theaters</span>\n      <h1 className=\"inline-heading\">Stream List</h1>\n      <span className=\"material-symbols-outlined\">theaters</span>\n      </div>\n\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter something...\" \n        className=\"input-box\" // Add class for styling\n        />\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\n        </form>\n      \n\n      \n      {/* Display the list of submitted inputs */}\n      <ul className=\"input-list\">\n        {inputList.map((item, index) => (\n          <li key={index}>\n            {item} \n            <button onClick={() => handleClick(item)}>Click me</button>\n          </li>\n        ))}\n      </ul>\n\n      {/* Display the message when an item is clicked */}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}