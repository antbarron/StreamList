{"ast":null,"code":"var _jsxFileName = \"/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamList = () => {\n  _s();\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  //const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\n  const [isDialogOpen, setIsDialogOpen] = useState(false); // <-- This is important to manage dialog visibility\n\n  const handleInputChange = event => {\n    setInput(event.target.value); // Update input state\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  /*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/\n  const handleClick = () => {\n    setIsDialogOpen(true); // Open dialog when button is clicked\n  };\n  const closeDialog = () => {\n    setIsDialogOpen(false); // Close dialog\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"inline-heading\",\n        children: \"Stream List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Enter something...\",\n        className: \"input-box\" // Add class for styling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"input-list\",\n      children: inputList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: handleClick,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dialog-message\",\n          children: \"Subscription Plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeDialog,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamList, \"gQMzUZQ79mTRbEJm3pUWVhLpjFo=\");\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StreamList","_s","input","setInput","inputList","setInputList","isDialogOpen","setIsDialogOpen","handleInputChange","event","target","value","handleSubmit","preventDefault","handleClick","closeDialog","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","map","item","index","onClick","_c","$RefreshReg$"],"sources":["/workspaces/StreamList/my-react-app/src/components/StreamList/StreamList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './StreamList.css'; // Relative path if StreamList.js and StreamList.css are in the same folder\n//import SelectedItem from './components/SelectedItem';\n\nconst StreamList = () => {\n  const [input, setInput] = useState(''); // To store the current input\n  const [inputList, setInputList] = useState([]); // To store the list of submitted inputs\n  //const [selectedItem, setSelectedItem] = useState(''); // Declare selectedItem with useState\n  const [isDialogOpen, setIsDialogOpen] = useState(false); // <-- This is important to manage dialog visibility\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value); // Update input state\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent page refresh\n    setInputList([...inputList, input]); // Add the current input to the inputList array\n    setInput(''); // Clear the input field after submission\n  };\n  /*const handleItemClick = (item) => {\n    setSelectedItem(item); // Update selected item when a list item is clicked\n  };*/\n  const handleClick = () => {\n    setIsDialogOpen(true); // Open dialog when button is clicked\n  };\n\n  const closeDialog = () => {\n    setIsDialogOpen(false); // Close dialog\n  };\n  return (\n    <div>\n\n    <div className=\"header-container\">\n      <span className=\"material-symbols-outlined\">theaters</span>\n      <h1 className=\"inline-heading\">Stream List</h1>\n      <span className=\"material-symbols-outlined\">theaters</span>\n      </div>\n\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Enter something...\" \n        className=\"input-box\" // Add class for styling\n        />\n        <button type=\"submit\" className=\"submit-button\">Submit</button>\n        </form>\n      \n\n      \n        <ul className=\"input-list\">\n  {inputList.map((item, index) => (\n    <li key={index} className=\"list-item\">\n      <span>{item}</span> {/* User input */}\n      <button className=\"play-button\" onClick={handleClick}>Play</button> {/* Play button */}\n    </li>\n  ))}\n</ul>\n\n\n      {/* Dialog box */}\n      {isDialogOpen && (\n        <div className=\"dialog-overlay\">\n          <div className=\"dialog-box\">\n            <h1 className=\"dialog-message\">Subscription Plans</h1>\n            <button className=\"close-button\" onClick={closeDialog}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StreamList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}